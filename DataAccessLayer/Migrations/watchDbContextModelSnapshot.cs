// <auto-generated />
using System;
using DataAccessLayer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(watchDbContext))]
    partial class watchDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EntityLayer.Sınıflar.DiziTur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DiziTurAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DiziTurs");
                });

            modelBuilder.Entity("EntityLayer.Sınıflar.Diziler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DiziAciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiziAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiziGorsel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DiziTurId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DiziTurId");

                    b.ToTable("Dizilers");
                });

            modelBuilder.Entity("EntityLayer.Sınıflar.FilmTur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FilmTurAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FilmTurs");
                });

            modelBuilder.Entity("EntityLayer.Sınıflar.Filmler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FilmAciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilmAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilmGorsel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilmLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FilmTurId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FilmTurId");

                    b.ToTable("Filmers");
                });

            modelBuilder.Entity("EntityLayer.Sınıflar.Kullanici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("KullaniciAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullaniciEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullaniciSifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullaniciSoyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kullanicis");
                });

            modelBuilder.Entity("EntityLayer.Sınıflar.Yakindakiler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("FilmTurId")
                        .HasColumnType("int");

                    b.Property<string>("YakinAciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YakinAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YakinGorsel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("YakinTarih")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FilmTurId");

                    b.ToTable("Yakindakilers");
                });

            modelBuilder.Entity("EntityLayer.Sınıflar.YeniFilmler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FilmTurId")
                        .HasColumnType("int");

                    b.Property<string>("YFilmAciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YFilmAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YFilmGorsel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YFilmLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FilmTurId");

                    b.ToTable("YeniFilmers");
                });

            modelBuilder.Entity("EntityLayer.Sınıflar.Diziler", b =>
                {
                    b.HasOne("EntityLayer.Sınıflar.DiziTur", "DiziTur")
                        .WithMany("Dizilers")
                        .HasForeignKey("DiziTurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiziTur");
                });

            modelBuilder.Entity("EntityLayer.Sınıflar.Filmler", b =>
                {
                    b.HasOne("EntityLayer.Sınıflar.FilmTur", "FilmTur")
                        .WithMany("Filmers")
                        .HasForeignKey("FilmTurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FilmTur");
                });

            modelBuilder.Entity("EntityLayer.Sınıflar.Yakindakiler", b =>
                {
                    b.HasOne("EntityLayer.Sınıflar.FilmTur", "FilmTur")
                        .WithMany("Yakindakilers")
                        .HasForeignKey("FilmTurId");

                    b.Navigation("FilmTur");
                });

            modelBuilder.Entity("EntityLayer.Sınıflar.YeniFilmler", b =>
                {
                    b.HasOne("EntityLayer.Sınıflar.FilmTur", "FilmTur")
                        .WithMany("YeniFilmlers")
                        .HasForeignKey("FilmTurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FilmTur");
                });

            modelBuilder.Entity("EntityLayer.Sınıflar.DiziTur", b =>
                {
                    b.Navigation("Dizilers");
                });

            modelBuilder.Entity("EntityLayer.Sınıflar.FilmTur", b =>
                {
                    b.Navigation("Filmers");

                    b.Navigation("Yakindakilers");

                    b.Navigation("YeniFilmlers");
                });
#pragma warning restore 612, 618
        }
    }
}
